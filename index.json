[{"categories":["Software Engineer"],"contents":"Longest Substring Without Repeating Characters Question Given a string s, find the length of the longest substring without repeating characters. Input: s = \u0026ldquo;abcabcbb\u0026rdquo;\nOutput: 3\nExplanation: The answer is \u0026ldquo;abc\u0026rdquo;, with the length of 3.\nclass Solution { public int lengthOfLongestSubstring(String s) { int n = s.length(); int ans = 0; int left = 0, right = 0; HashSet\u0026lt;Character\u0026gt; set = new HashSet\u0026lt;\u0026gt;(); while (left \u0026lt; n \u0026amp;\u0026amp; right \u0026lt; n) { if (!set.contains(s.charAt(right))) { set.add(s.charAt(right++)); ans = Math.max(ans, right - left); } else { set.remove(s.charAt(left++)); } } return ans; } } ","permalink":"https://Shu682682.github.io/blog/leetcode3/","tags":["LeetCode","Java","Data Structure","Algorithms"],"title":"LC-Longest Substring Without Repeating Characters"},{"categories":["Software Engineer"],"contents":"Add Two Numbers Question You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order, and each of their nodes contains a single digit. Add the two numbers and return the sum as a linked list. You may assume the two numbers do not contain any leading zero, except the number 0 itself. Input: l1 = [2,4,3], l2 = [5,6,4]\nOutput: [7,0,8]\nExplanation: 342 + 465 = 807.\npublic static ListNode addTwoNumbers(ListNode l1, ListNode l2) { ListNode dummy = new ListNode(); ListNode temp = dummy; int carry = 0; while (l1 != null || l2 != null || carry == 1) { int sum = 0; if (l1 != null) { sum += l1.val; l1 = l1.next; } if (l2 != null) { sum += l2.val; l2 = l2.next; } sum += carry; carry = sum / 10; ListNode node = new ListNode(sum % 10); temp.next = node; temp = temp.next; } return dummy.next; } ","permalink":"https://Shu682682.github.io/blog/leetcode2/","tags":["LeetCode","Java","Data Structure","Algorithms"],"title":"LC-Add Two Numbers"},{"categories":["Software Engineer"],"contents":"Two Sum Question Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target. Input: nums = [2,7,11,15], target = 9\nOutput: [0,1]\nExplanation: Because nums[0] + nums[1] == 9, we return [0, 1].\nclass Solution { public int[] twoSum(int[] nums, int target) { HashMap\u0026lt;Integer, Integer\u0026gt; map =new HashMap\u0026lt;\u0026gt;(); for(int i=0;i\u0026lt;nums.length;i++){ int num=nums[i]; int res=target-nums[i]; if(map.containsKey(res)){ return new int[] {map.get(res),i}; }map.put(num, i); }return null; } } ","permalink":"https://Shu682682.github.io/blog/leetcode1/","tags":["LeetCode","Java","Data Structure","Algorithms"],"title":"LC-Two Sum"},{"categories":["Software Engineer"],"contents":"Longest Palindromic Substring Question Given a string s, return the longest palindromic substring in s. Input: s = \u0026ldquo;babad\u0026rdquo;\nOutput: \u0026ldquo;bab\u0026rdquo;\nExplanation: \u0026ldquo;aba\u0026rdquo; is also a valid answer.\nclass Solution { public String longestPalindrome(String s) { if(s==null || s.length()\u0026lt;1) return\u0026#34;\u0026#34;; int start=0; int end=0; for(int i=0;i\u0026lt;s.length();i++){ int len1=expfromiddle(s,i,i); int len2=expfromiddle(s,i,i+1); int len= Math.max(len1,len2); if(len\u0026gt;end-start){ start=i-((len-1)/2); end=i+(len/2); } } return s.substring(start, end+1); } public int expfromiddle(String s, int left, int right){ if(s==null||left\u0026gt;right) return 0; while(left\u0026gt;=0 \u0026amp;\u0026amp; right\u0026lt;s.length()\u0026amp;\u0026amp;s.charAt(left)==s.charAt(right)){ left--; right++; } return right-left-1; } } ","permalink":"https://Shu682682.github.io/blog/leetcode5/","tags":["LeetCode","Java","Data Structure","Algorithms"],"title":"LC-Longest Palindromic Substring"},{"categories":["Software Engineer"],"contents":"Palindrome Number Question Given an integer x, return true if x is a palindrome, and false otherwise. Input: x = 121\nOutput: true\nExplanation: 121 reads as 121 from left to right and from right to left.\nclass Solution { public boolean isPalindrome(int x) { if(x\u0026lt;0) return false; if(x%10==0\u0026amp;\u0026amp; x!=0) return false; int res=0; while(x\u0026gt;res){ res=res*10+x%10; x/=10; } return res/10==x||res==x; } } ","permalink":"https://Shu682682.github.io/blog/leetcode9/","tags":["LeetCode","Java","Data Structure","Algorithms"],"title":"LC-Palindrome Number"},{"categories":["Software Engineer"],"contents":"Reverse Integer Question Given a signed 32-bit integer x, return x with its digits reversed. If reversing x causes the value to go outside the signed 32-bit integer range [-231, 231 - 1], then return 0. Input: x = 123\nOutput: 321\nInput: x = -123\nOutput: -321\nclass Solution { public int reverse(int x) { int res=0; while(x!=0){ int tail=x%10; int temp=res*10+tail; if(temp/10!=res) return 0; res=temp; x/=10; } return res; } } ","permalink":"https://Shu682682.github.io/blog/leetcode7/","tags":["LeetCode","Java","Data Structure","Algorithms"],"title":"LC-Reverse Integer"},{"categories":["Tasty Journey"],"contents":"Brunch Imagine a lazy Sunday morning, and I\u0026rsquo;m all set to chow down on a mouthwatering brunch that\u0026rsquo;s a total flavor explosion. It\u0026rsquo;s that sweet moment when I can just kick back and take it easy. I find a cozy spot, let out a sigh of relief, and feel all the stress melt away. I\u0026rsquo;m sipping on a hot cup of joe, and let me tell you, the smell alone is pure relaxation. The vibe is just right – people chatting, forks clinking, and some chill tunes in the background.\nEvery bite of my killer brunch is like a mini adventure for my taste buds, a perfect combo of sweet and savory. I\u0026rsquo;m taking my sweet time, savoring each bite like it\u0026rsquo;s the last.\nThis is my chance to disconnect from the usual grind, toss out all those deadlines and to-do lists. This easygoing morning is all about soaking up the chill vibes and just enjoying the moment. And as I take that next sip of coffee, I realize that these laid-back moments are what make weekends seriously awesome.\n","permalink":"https://Shu682682.github.io/blog/brunch/","tags":["Foodie"],"title":"Embracing Leisure Moments"},{"categories":["California Life"],"contents":"Telecom Carrier As a student, finding the best deal is my top priority when choosing a telecom carrier. Price plays a crucial role in determining which carrier suits my budget and needs. Additionally, some telecom carriers offer eSim, which is particularly helpful for international students like me. One of the main reasons eSim is valuable to me is because I can use my hometown sim card to receive important SMS, such as credit card authorization messages. This flexibility allows me to stay connected to essential services while enjoying the benefits and cost savings of my chosen carrier’s plan.\nAs I embark on this decision-making journey, I understand the significance of striking the right balance between affordability and essential features. By considering both the price and eSim availability, I aim to find a telecom carrier that not only offers a great deal but also caters to my unique needs as an international student.\n","permalink":"https://Shu682682.github.io/blog/telecom/","tags":["USA Life"],"title":"Telecom Carrier"},{"categories":["California Life"],"contents":"Navigating the House Rental Journey Finding housing has been a challenging task for me, especially since I am not physically in California during my search for a rental home. As a result, I\u0026rsquo;ve had to rely on virtual methods to explore available options. However, this approach comes with its own set of concerns, particularly the need to be cautious about potential housing scammers.\nPrice, proximity to my school, and safety are critical factors I must consider while evaluating housing options. Connecting with landlords to gather information has taken up a significant amount of my time, as I strive to make informed decisions from afar.\nAnother hurdle arises when it comes to remitting the deposit to the landlord before my arrival. Since I lack friends or relatives in California who can help authenticate the process, I find myself facing the risk of potential scams. Losing the deposit in case the landlord disappears without providing the promised accommodation is a distressing thought.\nFurthermore, not having a car limits my options as I must ensure the chosen house is within a reasonable distance from my school. After extensive searching and deliberation, I have finally found a house that requires a mere 15-minute bike ride to reach my campus. While it may not be the most convenient, it is the most affordable option available.\n","permalink":"https://Shu682682.github.io/blog/house_rental/","tags":["Rental"],"title":"House Hunting"},{"categories":[""],"contents":"Heading 1 Heading 2 Heading 3 Heading 4 Heading 5 Heading 6 Emphasis Emphasis, aka italics, with asterisks or underscores.\nStrong emphasis, aka bold, with asterisks or underscores.\nCombined emphasis with asterisks and underscores.\nStrikethrough uses two tildes. Scratch this.\nLink I\u0026rsquo;m an inline-style link\nI\u0026rsquo;m an inline-style link with title\nI\u0026rsquo;m a reference-style link\nI\u0026rsquo;m a relative reference to a repository file\nYou can use numbers for reference-style link definitions\nOr leave it empty and use the link text itself.\nURLs and URLs in angle brackets will automatically get turned into links. http://www.example.com or http://www.example.com and sometimes example.com (but not on Github, for example).\nSome text to show that the reference links can follow later.\nParagraph Lorem ipsum dolor sit amet consectetur adipisicing elit. Quam nihil enim maxime corporis cumque totam aliquid nam sint inventore optio modi neque laborum officiis necessitatibus, facilis placeat pariatur! Voluptatem, sed harum pariatur adipisci voluptates voluptatum cumque, porro sint minima similique magni perferendis fuga! Optio vel ipsum excepturi tempore reiciendis id quidem? Vel in, doloribus debitis nesciunt fugit sequi magnam accusantium modi neque quis, vitae velit, pariatur harum autem a! Velit impedit atque maiores animi possimus asperiores natus repellendus excepturi sint architecto eligendi non, omnis nihil. Facilis, doloremque illum. Fugit optio laborum minus debitis natus illo perspiciatis corporis voluptatum rerum laboriosam.\nList List item List item List item List item List item Unordered List List item List item List item List item List item Code and Syntax Highlighting Inline code has back-ticks around it.\nvar s = \u0026#34;JavaScript syntax highlighting\u0026#34;; alert(s); s = \u0026#34;Python syntax highlighting\u0026#34; print s No language indicated, so no syntax highlighting. But let\u0026#39;s throw in a \u0026lt;b\u0026gt;tag\u0026lt;/b\u0026gt;. Blockquote This is a blockquote example.\nInline HTML You can also use raw HTML in your Markdown, and it\u0026rsquo;ll mostly work pretty well.\nTables Colons can be used to align columns.\nTables Are Cool col 3 is right-aligned $1600 col 2 is centered $12 zebra stripes are neat $1 There must be at least 3 dashes separating each header cell. The outer pipes (|) are optional, and you don\u0026rsquo;t need to make the raw Markdown line up prettily. You can also use inline Markdown.\nMarkdown Less Pretty Still renders nicely 1 2 3 Image Youtube video ","permalink":"https://Shu682682.github.io/blog/pre-arrival/","tags":null,"title":"How To Use Checklists To Improve Your UX"},{"categories":null,"contents":"","permalink":"https://Shu682682.github.io/blog/bit_manipulation/","tags":null,"title":""},{"categories":null,"contents":"Test\nPancake Test Test Hello What are you quote\nword(/blog/post-1)\nThis is testhello\nprint(\u0026#34;Hello World\u0026#34;) Tables Are Cool col 3 is right-aligned $1600 col 2 is centered $12 zebra stripes are neat $1 ","permalink":"https://Shu682682.github.io/blog/pancake/","tags":null,"title":""},{"categories":null,"contents":"","permalink":"https://Shu682682.github.io/blog/queuestack/","tags":null,"title":""},{"categories":null,"contents":"","permalink":"https://Shu682682.github.io/blog/stringcharacter/","tags":null,"title":""},{"categories":null,"contents":"Pancake ","permalink":"https://Shu682682.github.io/blog/test2/","tags":null,"title":""}]